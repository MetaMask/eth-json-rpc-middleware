{"version":3,"file":"providerFromEngine.js","sourceRoot":"","sources":["../src/providerFromEngine.ts"],"names":[],"mappings":";;;;;;AACA,sFAA4D;AAG5D,SAAgB,kBAAkB,CAChC,MAAqB;IAErB,MAAM,QAAQ,GACZ,IAAI,4BAAgB,EAA8B,CAAC;IACrD,+BAA+B;IAC/B,QAAQ,CAAC,SAAS,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE;QAC/B,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,QAAQ,CAAC,IAAI,GAAG,CACd,GAAwB,EACxB,QAAgD,EAChD,EAAE;QACF,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,wBAAwB;IACxB,IAAI,MAAM,CAAC,EAAE,EAAE;QACb,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,OAAe,EAAE,EAAE;YAC5C,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AA3BD,gDA2BC","sourcesContent":["import { JsonRpcEngine, JsonRpcRequest } from 'json-rpc-engine';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type { SafeEventEmitterProvider } from './types';\n\nexport function providerFromEngine(\n  engine: JsonRpcEngine,\n): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider =\n    new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = (req, cb) => {\n    engine.handle(req, cb);\n  };\n\n  provider.send = (\n    req: JsonRpcRequest<any>,\n    callback: (error: any, providerRes: any) => void,\n  ) => {\n    if (typeof callback !== 'function') {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n\n  // forward notifications\n  if (engine.on) {\n    engine.on('notification', (message: string) => {\n      provider.emit('data', null, message);\n    });\n  }\n  return provider;\n}\n"]}